#!/usr/bin/env zsh
refresh_directory(){ # Create a function
    if [[ -d $1 ]]; then # Check if argument-1 is directory then
        [[ -n "$2" ]] && mkdir -p ${PREFIX_PATH}$2
        cp -rf $1 ${PREFIX_PATH}$1
    fi # End if-else statement
}
refresh_file(){ # Create a function
    install -D "$1" "${PREFIX_PATH}${2:-$1}"
}
main(){ 
    # ╭──────────────────────────────────────────────────────────────────────────────╮
    # │                                  Initialize                                  │
    # ╰──────────────────────────────────────────────────────────────────────────────╯
    emulate -L zsh; setopt extendedglob warncreateglobal pipefail errreturn
    need_installed parallel-moreutils mkarchiso # Check if command is installed || exit 
    need_normal_user # Need normal user || exit
    AskPassword # Ask password || exit
    
    local file # Declare local variable
    local directory # Declare local variable
    local PREFIX_PATH="./prefix/airootfs" # Declare local variable
    
    if [[ ! -d $PREFIX_PATH ]]; then # Check if prefix path is directory
        return 1 # Exit 
    else
        doas rm -rf $PREFIX_PATH && cp -rf /usr/share/archiso/configs/releng/airootfs ./prefix/
        # doas rm -rf ./prefix/efiboot ./prefix/syslinux ./prefix/grub ./prefix/pacman.conf &>/dev/null
    fi # End if-else statement
    # ╭──────────────────────────────────────────────────────────────────────────────╮
    # │                               Refresh airootfs                               │
    # ╰──────────────────────────────────────────────────────────────────────────────╯
    warn_msg "Refreshing..." # Show warning message
    ln -sf ../efiboot ../syslinux ../grub ../profiledef.sh ../packages.x86_64 --target-directory=./prefix/
    cp -rf ./customize_airootfs.sh $PREFIX_PATH/root
    parallel-moreutils -j $(nproc --all) rm -rf -- \
        ./prefix/airootfs/etc/ssh \
        ./prefix/airootfs/etc/skel \
        ./prefix/airootfs/usr/local/bin \
        ./prefix/airootfs/usr/local/share/livecd-sound \
        ./prefix/airootfs/root/.zlogin ./prefix/airootfs/root/.automated_script.sh \
        ./prefix/airootfs/etc/systemd/system/sound.target.wants \
        ./prefix/airootfs/etc/systemd/system/livecd-talk.service \
        ./prefix/airootfs/etc/systemd/system/getty@tty1.service.d \
        ./prefix/airootfs/etc/systemd/system/cloud-init.target.wants \
        ./prefix/airootfs/etc/systemd/system/livecd-alsa-unmuter.service \
        ./prefix/airootfs/etc/systemd/system/reflector.service.d \
        ./prefix/airootfs/etc/systemd/system/pacmanbeeper.service \
        ./prefix/airootfs/etc/systemd/system/choose-mirror.service
    ln -sf /usr/share/zoneinfo/UTC ./prefix/airootfs/etc/localtime
    mkdir -p ${PREFIX_PATH}/root/.config ${PREFIX_PATH}/root/.local/share ${PREFIX_PATH}/usr/lib ${PREFIX_PATH}/usr/src ${PREFIX_PATH}/usr/local
    mkdir -p ${PREFIX_PATH}/etc/skel/.config ${PREFIX_PATH}/etc/skel/.local/share
    # ╭──────────────────────────────────────────────────────────────────────────────╮
    # │                              Set important file                              │
    # ╰──────────────────────────────────────────────────────────────────────────────╯
    warn_msg "Creating important file..." # Show warning message
    echo "Craccken" > $PREFIX_PATH/etc/hostname
    echo "LANG=en_US.UTF-8" > $PREFIX_PATH/etc/locale.conf
    echo "Welcome to Craccken linux" > $PREFIX_PATH/etc/motd
    {
        echo "root:!*::root"
        echo "user:!*::"
    } > ./prefix/airootfs/etc/gshadow
    {
        echo "root:x:0:root"
        echo "sys:x:3:user"
        echo "adm:x:4:user"
        echo "wheel:x:10:user"
        echo "log:x:19:user"
        echo "network:x:90:user"
        echo "floppy:x:94:user"
        echo "scanner:x:96:user"
        echo "power:x:98:user"
        echo "rfkill:x:850:user"
        echo "users:x:985:user"
        echo "realtime:x:970:user"
        echo "video:x:860:user"
        echo "storage:x:870:user"
        echo "optical:x:880:user"
        echo "lp:x:840:user"
        echo "audio:x:890:user"
        echo "user:x:1000:"
    } > ./prefix/airootfs/etc/group
    {
        echo "root:x:0:0:root:/root:/usr/bin/zsh"
        echo "user:x:1000:1000::/home/user:/bin/zsh"
    } > ./prefix/airootfs/etc/passwd
    {
        echo "root:$(openssl passwd -6 -salt sus root):14871::::::"
        echo "user:$(openssl passwd -6 -salt sus root):14871::::::"
    } > ./prefix/airootfs/etc/shadow
    # ╭──────────────────────────────────────────────────────────────────────────────╮
    # │                              Copy directory/file                             │
    # ╰──────────────────────────────────────────────────────────────────────────────╯
    refresh_directory /etc/X11/app-defaults /etc/X11
    refresh_directory /opt
    refresh_directory /etc/zsh
    refresh_directory /etc/dunst
    refresh_directory /etc/zathurarc
    refresh_directory /etc/xdg/waybar
    refresh_directory /etc/default
    refresh_directory /etc/X11/xorg.conf.d
    refresh_directory /etc/xdg/nvim /etc/xdg
    refresh_directory /etc/sddm.conf.d
    refresh_directory /usr/share/fonts/OTF /usr/share/fonts
    refresh_directory /usr/share/fonts/TTF /usr/share/fonts
    # refresh_directory /usr/local/src
    refresh_file /etc/zathurarc
    refresh_file /etc/sysctl.conf
    refresh_file /etc/tmux.conf
    refresh_file /etc/vconsole.conf
    refresh_file /etc/gitconfig
    refresh_file /etc/pacman.conf
    refresh_file /etc/dialogrc
    refresh_file /etc/nanorc
    refresh_file /etc/locale.gen
    refresh_file /etc/X11/xinit/xinitrc
    refresh_file /etc/X11/xinit/Xprofile
    refresh_file /etc/X11/xinit/Xresources
    refresh_file /usr/share/qtcreator/themes/craccken.creatortheme
    refresh_file "$HOME/.config/GIMP/2.10/splashes/gimp.png" /etc/skel/.config/GIMP/2.10/splashes/gimp.png
    # refresh_file /etc/mkinitcpio.d/linux-xanmod-edge.preset /etc/mkinitcpio.d
    cp -rf /etc/ly ${PREFIX_PATH}/etc/ly_conf

    local -a CONFIGURATIONS=( # Home configurations
        "$HOME/.config/river"
        "$HOME/.config/hypr"
        "$HOME/.config/foot"
        "$HOME/.config/mpd"
        "$HOME/.config/ncmpcpp"
        "$HOME/.config/vis"
        "$HOME/.config/neofetch"
        "$HOME/.config/nwg-bar"
        "$HOME/.config/nwg-drawer"
        "$HOME/.config/bat"
        "$HOME/.config/electron-flags.conf"
        "$HOME/.config/fsh"
        "$HOME/.config/wget"
        "$HOME/.config/npmrc"
    )
    local -a SYSTEM_CONFIGURATIONS=( # System configurations
        "/etc/doas.conf"
    )
    
    cp -rf "${CONFIGURATIONS[@]}" --target-directory=${PREFIX_PATH}/etc/skel/.config # Copy home configurations to skeleton directory
    echo "${PREFIX_PATH}/root/.local/share ${PREFIX_PATH}/etc/skel/.local/share" | xargs -n 1 -- cp -rf "$HOME/.local/share/zinit" 
    doas cp -f "${SYSTEM_CONFIGURATIONS[@]}" --target-directory=${PREFIX_PATH}/etc # Copy from /etc/ directory needs run as root
    # ╭──────────────────────────────────────────────────────────────────────────────╮
    # │                               Other operations                               │
    # ╰──────────────────────────────────────────────────────────────────────────────╯
    warn_msg "Running some other operations..." # Show warning message
    # pushd /usr/local/src/Hyprland && sudo git pull && sudo git pull --recurse-submodules && popd
    sudo chmod 755 ${PREFIX_PATH}/etc/doas.conf
    sed -i "s/GRUB_DISABLE_LINUX_PARTUUID=false/#GRUB_DISABLE_LINUX_PARTUUID=false/" ./prefix/airootfs/etc/default/grub
    sed -i "s/GRUB_DISABLE_LINUX_UUID=true/#GRUB_DISABLE_LINUX_UUID=true/" ./prefix/airootfs/etc/default/grub
    sed 's/#HoldPkg/HoldPkg/g' /etc/pacman.conf > ./prefix/pacman.conf
    info_msg "Done!" # Show info message
}
main # Call main function
unfunction refresh_file refresh_directory main
