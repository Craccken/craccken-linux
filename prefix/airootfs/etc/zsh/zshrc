#  ███████╗███████╗██╗  ██╗
#  ╚══███╔╝██╔════╝██║  ██║
#    ███╔╝ ███████╗███████║
#   ███╔╝  ╚════██║██╔══██║
#  ███████╗███████║██║  ██║
#  ╚══════╝╚══════╝╚═╝  ╚═╝
#          ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
#          ┃                      Source file in /etc/zsh/zshrc.d                         ┃
#          ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
# print -v _ZSH_INIT_TIME -P '%D{%s%N}' # Get info time start
 
if [[ -d /etc/zsh/zinit ]]; then # Check if zsh-plugins-manager(zinit) not available
    declare -A ZINIT                                                            # Declare an associative array
    ZINIT[HOME_DIR]=~/.local/share/zinit                                        # Set where zinit should create all working directories, default: ~/.local/share/zinit
    ZINIT[COMPINIT_OPTS]="-C -d $XDG_CACHE_HOME/zsh/zcompdump-$ZSH_VERSION"     # Set options for compinit call(i.e done by `zicompinit`), use to pass -C to speed up loading
    ZINIT[ZCOMPDUMP_PATH]="$XDG_CACHE_HOME/zsh/zcompdump-$ZSH_VERSION"          # Set directory for dumped completion file, this will speed compinit.
    . /etc/zsh/zinit/zinit.zsh                                                  # Enable zsh-plugins-manager(zinit)
fi # End if-else statement.

[[ -d "/etc/zsh/zshrc.d" ]] && { # Check if has /etc/zsh/zshrc.d directory && execute function below
    for file in /etc/zsh/zshrc.d/**/*(.); do # Create for-loop with file in /etc/zsh/zshrc.d/ directory
        eval "$(<${file})" # Check if file is readable && source the file
    done; unset file # End for-loop statement; Clearing variable so that will not polute the shell.
}

#          ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
#          ┃                                     END                                      ┃
#          ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
#                   NOTE: Uncomment this below if you want benchmarking this config
# print -v _ZSH_LOADED_TIME -P '%D{%s%N}' # Get info time end
# _ZSH_STARTUP_TIME=$(( ( _ZSH_LOADED_TIME - _ZSH_INIT_TIME ) / 1000000 )) # Calculate differ time between start and end
# info_msg "Startup time: $_ZSH_STARTUP_TIME ms"
