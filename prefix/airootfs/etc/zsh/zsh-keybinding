#!/usr/bin/env zsh
#  ███████╗███████╗██╗  ██╗        ██╗  ██╗███████╗██╗   ██╗██████╗ ██╗███╗   ██╗██████╗ ██╗███╗   ██╗ ██████╗ 
#  ╚══███╔╝██╔════╝██║  ██║        ██║ ██╔╝██╔════╝╚██╗ ██╔╝██╔══██╗██║████╗  ██║██╔══██╗██║████╗  ██║██╔════╝ 
#    ███╔╝ ███████╗███████║        █████╔╝ █████╗   ╚████╔╝ ██████╔╝██║██╔██╗ ██║██║  ██║██║██╔██╗ ██║██║  ███╗
#   ███╔╝  ╚════██║██╔══██║        ██╔═██╗ ██╔══╝    ╚██╔╝  ██╔══██╗██║██║╚██╗██║██║  ██║██║██║╚██╗██║██║   ██║
#  ███████╗███████║██║  ██║███████╗██║  ██╗███████╗   ██║   ██████╔╝██║██║ ╚████║██████╔╝██║██║ ╚████║╚██████╔╝
#  ╚══════╝╚══════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚══════╝   ╚═╝   ╚═════╝ ╚═╝╚═╝  ╚═══╝╚═════╝ ╚═╝╚═╝  ╚═══╝ ╚═════╝ 
# INFO: Use 'wev' or 'cat -v' command to print the key codes, e.g: home-key, end-key, up-arrow-key, down-arrow-key, etc.                                                                            
# INFO: Use CTRL+s to freeze output and use CTRL+q to resume it, it is default from zsh, to disable it add `setopt noflowcontrol` in your zshrc                                             
# ╭──────────────────────────────────────────────────────────────────────────────╮
# │                            Load functions to zsh                             │
# ╰──────────────────────────────────────────────────────────────────────────────╯
autoload fancy-ctrl-z edit-clipboard edit-command-line zle-keymap-select zle-line-init want-to-look-busy select-quoted select-bracketed fast-sudo
# ╭──────────────────────────────────────────────────────────────────────────────╮
# │       Add functions to zsh-line-edit widget so we can bind it to a key       │
# ╰──────────────────────────────────────────────────────────────────────────────╯
zle -N fancy-ctrl-z 
zle -N edit-clipboard
zle -N edit-command-line
zle -N i-want-to-look-busy
zle -N select-quoted
zle -N teleport
zle -N edit-configuration
zle -N select-bracketed
zle -N fast-sudo
# ╭──────────────────────────────────────────────────────────────────────────────╮
# │                               Special widgets                                │
# ╰──────────────────────────────────────────────────────────────────────────────╯
zle -N zle-keymap-select
zle -N zle-line-init
# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                                    UNBIND                                    ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
bindkey -r '^R' # Unbind Ctrl+R
# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                                  COMPLETION                                  ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
bindkey -M menuselect 'h' vi-backward-char          # Set keybinding for move-left in tab-complete-menu: h
bindkey -M menuselect 'j' vi-down-line-or-history   # Set keybinding for move-down in tab-complete-menu: j
bindkey -M menuselect 'k' vi-up-line-or-history     # Set keybinding for move-up in tab-complete-menu: k
bindkey -M menuselect 'l' vi-forward-char           # Set keybinding for move-right in tab-complete-menu: l
# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                                  FUNCTIONS                                   ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
bindkey -M main '^e' teleport           # Set keybinding for call teleport functions: CTRL + e
bindkey -M main '^Z' fancy-ctrl-z       # Set keybinding for call fancy-ctrl-z functions: CTRL + z
bindkey -M vicmd '^v' edit-command-line # Set keybinding for call edit-command-line: CTRL + V
bindkey -M main '^x^v' edit-clipboard   # Set keybinding for call edit-clipboard functions: CTRL + x + CTRL + v
bindkey -M main '^[s' fast-sudo         # Set keybinding for call fast-sudo functions: Alt + s
bindkey -M main '^e^r' edit-configuration # Set keybinding for call teleport functions: CTRL + e + CTRL + r
bindkey -M main '^x^f' want-to-look-busy # Set keybinding for call i-want-to-look-busy: CTRL + x CTRL + c
# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                                     CORE                                     ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
bindkey -M main '^ ' autosuggest-accept     # accepts the current suggestion: CTRL + SPACE
bindkey -M viins '^[c' fzf-cd-widget        # cd into the selected directory: ALT + c
bindkey -M viins '^[t' fzf-file-widget      # paste the selected file path into the command line: ALT + t
bindkey -M viins '^[r' fzf-history-widget   # paste the selected command from history into command line: ALT + r
bindkey -M main ' ' abbr-expand-and-space   # following an abbreviation, expands it; then adds a space
bindkey -M vicmd '^M' forward-char          # move forward one character in vi normal mode: ENTER
bindkey -M main '^L' clear-screen           # clean terminal screen: CTRL + l
bindkey -M main '^[[F' end-of-line          # move cursor to end-of-line: END
bindkey -M main '^[[H' beginning-of-line    # move cursor to beginning-of-line: HOME
bindkey -M main '^[[Z' undo                 # undo last action: shift + tab
bindkey "^?" backward-delete-char           # fix the backspace key stops working.
for mode in visual viopp; do # Create for loop with mode as value
	for key in {a,i}{\',\",\`}; do # Create for loop with key as value
		bindkey -M "${mode}" "${key}" select-quoted # Set keybinding for being able to ci", ci', ci`, di", etc like in vim
	done # End for-loop statement
	for key in {a,i}${(s..)^:-'()[]{}<>bB'}; do # Create for loop with key as value
		bindkey -M "${mode}" "${key}" select-bracketed # Set keybinding for being able to ci{, ci(, ci<, di{, etc like in vim
	done # End for-loop statement
done # End for-loop statement
