#!/usr/bin/env zsh
# vim:ft=sh
# ╭──────────────────────────────────────────────────────────────────────────────╮
# │                    Collection of configuration directory                     │
# ╰──────────────────────────────────────────────────────────────────────────────╯
emulate -L zsh; setopt extendedglob warncreateglobal pipefail errreturn
need_installed fzf # Check if command is installed || exit with error exit-code

local -A available_options # Declare local associative array
available_options[zsh]="/etc/zsh"
available_options[xinit]="/etc/X11/xinit"
available_options[neovim]="/etc/xdg/nvim"
available_options[dunst]="/etc/dunst"
available_options[sddm]="/etc/sddm.conf.d"
available_options[waybar]="/etc/xdg/waybar"
available_options[log]="/var/log"
available_options[log__nginx]="/var/log/nginx"
available_options[zsh__alias]="/etc/zsh/alias"
available_options[zsh__prompt]="/etc/zsh/prompt"
available_options[zsh__functions]="/etc/zsh/functions"
available_options[zsh__plugin-config]="/etc/zsh/configs"
available_options[neovim__plugin-config]="/etc/xdg/nvim/after/plugin"
available_options[neovim__filetype-config]="/etc/xdg/nvim/ftplugin"
local option="${1:-$(print -l ${(ko)available_options} | fzf --no-multi --header='Choose your destination')}" # Declare local variable if argument-1 empty then pick available_options keys value and sorted with fzf
[[ -z "${option}" ]] && send_return EINVAL # If option variable is empty && exit
[[ -z "${available_options[$option]}" ]] && send_return EINVAL # If available_options(option) empty value -> (not valid) && exit
speak "Moving, into ${option} directory." || : # Call function from /etc/zsh/functions to translate text to speak
cd "${available_options[$option]}" 2> /dev/null || speak "Can not teleport into ${option} directory." || : # Moving into available_options(option) value || exit
