#!/usr/bin/env zsh
# ╭──────────────────────────────────────────────────────────────────────────────╮
# │ Collection of command extracting archive file that i don't want to remember. │
# ╰──────────────────────────────────────────────────────────────────────────────╯
emulate -L zsh; setopt extendedglob warncreateglobal pipefail nounset
must_have_argument ${@:-} || return $? # Must have argument passed || exit

local file # Create local variable
for file in $@; do # Create for-loop with list of passed argument
    if [[ ! -r "${file}" ]]; then # Check if file is not readable
        error_msg "$0: file is unreadable: '${file}'"
        continue # Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
    fi # End if-else statement
    case "${file}" in # Read file value
        *.xz)    
            need_installed unxz || continue # Check if command is installed || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) unxz -- "${file}"
            ;;
        *.gz)   
            need_installed gunzip || continue # Check if command is installed || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) gunzip -- "${file}"
            ;;
        *.cbz|*.epub|*.zip)
            need_installed unzip || continue # Check if command is installed || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) unzip -- "${file}"
            ;;
        *.bz2)  
            need_installed bunzip2 || continue # Check if command is installed || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) bunzip2 -- "${file}"
            ;;
        *.tgz)  
            need_installed tar || continue # Check if command is installed || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) tar xvzf -- "${file}"
            ;;
        *.tbz2) 
            need_installed tar || continue # Check if command is installed || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) tar xvjf -- "${file}"
            ;;
        *.lzma) 
            need_installed unlzma || continue # Check if command is installed || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) unlzma -- "${file}"
            ;;
        *.exe)
            need_installed cabextract || continue # Check if command is installed || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) cabextract -- "${file}"
            ;;
        *.Z|*.z) 
            need_installed uncompress || continue # Check if command is installed || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) uncompress -- "${file}"
            ;;
        *.cbr|*.rar) 
            need_installed unrar || continue # Check command || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) unrar x -- "${file}"
            ;;
        *.tar|*.tar.gz|*.tar.xz|*.tar.bz2) 
            need_installed tar || continue # Check command || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) tar xvf -- "${file}"
            ;;
        *.7z*|*.arj|*.cab|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.rpm|*.udf|*.wim|*.xar) 
            need_installed 7z || continue # Check if command is installed || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) 7z x -- "${file}"
            ;;
        *.zpaq)
            need_installed zpaq || continue # Check if command is installed || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) zpaq x -- "${file}"
            ;;
        *.ace|*.cba)
            need_installed unace || continue # Check if command is installed || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) unace x -- "${file}"
            ;;
        *.arc)
            need_installed arc || continue # Check if command is installed || Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            parallel-moreutils -j $(nproc) arc e -- "${file}"
            ;;
        *)
            error_msg "$0: unrecognized file extension: '${file}'"
            continue # Resumes the next iteration of the enclosing FOR, WHILE or UNTIL loop.
            ;;
    esac # End switch-case statement
done # End for-loop
