#  ██╗  ██╗██╗   ██╗██████╗ ██████╗ ██╗      █████╗ ███╗   ██╗██████╗ 
#  ██║  ██║╚██╗ ██╔╝██╔══██╗██╔══██╗██║     ██╔══██╗████╗  ██║██╔══██╗
#  ███████║ ╚████╔╝ ██████╔╝██████╔╝██║     ███████║██╔██╗ ██║██║  ██║
#  ██╔══██║  ╚██╔╝  ██╔═══╝ ██╔══██╗██║     ██╔══██║██║╚██╗██║██║  ██║
#  ██║  ██║   ██║   ██║     ██║  ██║███████╗██║  ██║██║ ╚████║██████╔╝
#  ╚═╝  ╚═╝   ╚═╝   ╚═╝     ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═════╝ 

# monitor = ,1920x1080@60,0x0,1 # Syntax for monitor: monitor=name,res,offset,scale [name can be empty for a global rule]
monitor = ,preferred,auto,1 # You can use preferred as a resolution to use the display's preferred size, and auto as an offset to let Hyprland decide on an offset for you.
workspace = ,1 # Syntax for workspace: workspace=name,number <-- will tell Hyprland to make the default workspace on all monitors a number 1.

general {
    sensitivity = 1                   # mouse sensitivity (*this is Hyprland sensitivity, added on top of the data. To modify the data per-device, or more accurately (sensitivities > 1 might cause mouse to jump pixels), see `input:sensitivity`)
    border_size = 2                   # Border thickness
    no_border_on_floating = true      # disable borders for floating windows.
    gaps_in = 1                       # Gaps between windows
    gaps_out = 2                      # Gaps between window-monitor edge
    col.inactive_border = 0x00000000  # Set normal application border color
    col.active_border = 0xffffffff    # Set focused application border color
    cursor_inactive_timeout = 30      # in seconds, after how many seconds of cursor's inactivity to hide it. (default / never is 0)
    layout = master                   # which layout to use. (Available: dwindle, master, default is dwindle)
    no_cursor_warps = true            # if true, will not warp the cursor in many cases (focusing, keybinds, etc)
    apply_sens_to_raw = false         # If on, will also apply the sensitivity to raw mouse output (e.g. sensitivity in games)
}

decoration {
    rounding = 8                        # Rounded corners radius (in pixels)
    multisample_edges = true            # enable antialiasing (no-jaggies) for rounded corners.
    active_opacity = 0.9                # Set focuses application opacity, float from 0 - 1
    inactive_opacity = 0.9              # Set normal application opacity, float from 0 - 1
    fullscreen_opacity = 0.9            # Set fullscreen application opacity, float from 0 - 1
    blur = true                         # Enable dual kawase window background blur
    blur_size = 10                      # Minimum 1, blur size (distance)
    blur_passes = 4                     # Minimum 1, the amount of passes to perform
    blur_new_optimizations = true       # whether to enable further optimizations to the blur. Recommended to turn on, as it will massively improve performance, but some people have experienced graphical issues
    blur_ignore_opacity = false         # make the blur layer ignore the opacity of the window.
    drop_shadow = true                  # enable drop shadows on windows
    shadow_range = 10                    # Shadow range (in pixels), more = larger shadow
    shadow_render_power = 4             # (1 - 4), in what power to render the falloff (more power, the faster the falloff)
    shadow_ignore_window = true         # if true, the shadow will not be rendered behind the window itself, only around it.
    col.shadow = 0xffffffff             # shadow's color. Alpha dictates shadow's opacity.
    col.shadow_inactive = 0xff000000    # inactive shadow color. (if not set, will fall back to col.shadow)
    shadow_offset = 0 0                 # shadow's rendering offset.
    # shadow_scale = 1.0                  # shadow’s scale. 0.0 - 1.0
    dim_inactive = true                 # Enable dimming of inactive windows
    dim_strength = 0.7                  # how much inactive windows should be dimmed, 0.0 - 1.0
}

animations {
    enabled = true                              # Enable animations
    # use_resize_transitions = true               # enable fade transitions for resize animations
    bezier = sus, 0.05, 0.9, 0.1, 1.1           # Define bezier animation
    bezier = smooth, 0.79, 0.33, 0.13, 0.83     # Define bezier animation
    bezier = overshot, 0.13, 0.99, 0.29, 1.1    # Define bezier animation
    bezier = smoothOut, 0.36, 0, 0.66, -0.56    # Define bezier animation
    bezier = smoothIn, 0.25, 1, 0.5, 1          # Define bezier animation
    
    animation = windowsIn, 1, 5, sus, popin 20%     # window open
    animation = windowsOut, 1, 10, smooth, slide    # window close
    animation = windowsMove, 1, 5, default          # everything in between, moving, dragging, resizing.
    
    animation = fadeIn, 1, 5, smoothIn      # fade in (open) -> layers and windows
    animation = fadeOut, 1, 6, smoothIn     # fade out (close) -> layers and windows
    animation = fadeSwitch, 1, 10, smoothIn # fade on changing activewindow and its' opacity
    animation = fadeShadow, 1, 10, smoothIn # fade on changing activewindow for shadows
    animation = fadeDim, 1, 10, smoothIn    # the easing of the dimming of inactive windows
    
    animation = border, 1, 10, default              # borders - border color
    animation = workspaces, 1, 3.1, default, fade   # workspaces - workspace change - Styles: slide,slidevert,fadein
}

input {
    kb_model =                                  # Appropriate XKB keymap parameter
    kb_layout = us                              # Appropriate XKB keymap parameter
    kb_variant =                                # Appropriate XKB keymap parameter
    kb_options = caps:escape_shifted_capslock   # Appropriate XKB keymap parameter <- Make unmodified Caps Lock an additional Esc, but Shift + Caps Lock behaves like regular Caps Loc
    kb_rules =                                  # Appropriate XKB keymap parameter
    kb_file =                                   # If you prefer, you can use a path to your custom .xkb file.
    numlock_by_default = false                  # Engage numlock by default.
    repeat_rate = 40                            # in ms, The repeat rate for held keys
    repeat_delay = 300                          # in ms, The repeat delay (grace period) before the spam
    sensitivity = 0.5                           # set the libinput sensitivity. This **HAS** to be from -1 to 1, or else it will be clamped.
    # accel_profile = "adaptive"                  # Set the libinput acceleration profile. Can be one of adaptive, flat 
    force_no_accel = false                      # force no mouse acceleration, bypasses most of your pointer settings to get as raw of a signal as possible.
    # left_handed = false                         # Switches RMB and LMB
    # scroll_method = "edge"                      # Set the libinput scroll method. Can be one of 2fg (2 fingers), edge, on_button_down, no_scroll
    natural_scroll = false                      # enable natural scroll
    follow_mouse = 1                            # (0/1/2/3) enable mouse following (focus on enter new window) - Quirk: will always focus on mouse enter if you're entering a floating window from a tiled one, or vice versa. 0 - disabled, 1 - full, 2 - loose. Loose will focus mouse on other windows on focus but not the keyboard, 3 - full loose, will not refocus on click, but allow mouse focus to be detached from the keyboard like in 2.
    float_switch_override_focus = true          # if enabled, focus will follow mouse if changing from tiled to floating and vice versa
    touchpad {
        disable_while_typing = true     # disable touchpad while typing
        natural_scroll = true           # enable natural scroll on touchpad
        # scroll_factor = 1.0             # control the amount of scroll applied
        middle_button_emulation = true  # enable middle mouse button emulation by tap with three finger on touchpad
        clickfinger_behavior = true     # self-explanatory
        tap-to-click = true             # self-explanatory
        drag_lock = true                # enable dragging with drag lock
    }
}

gestures {
    workspace_swipe = true                  # enable workspace swipe gesture
    workspace_swipe_fingers = 3             # how many fingers for the gesture
    workspace_swipe_distance = 300          # in px, the distance of the gesture
    workspace_swipe_invert = true           # invert the direction
    workspace_swipe_min_speed_to_force = 30 # minimum speed in px per timepoint to force the change ignoring cancel_ratio (default 30) Setting to 0 will disable this mechanic.
    workspace_swipe_cancel_ratio = 0.5      # (0.0 - 1.0) how much the swipe has to proceed in order to commence it. (0.7 -> if > 0.7 * distance, switch, if less, revert)
    # workspace_swipe_create_new = true       # whether a swipe right on the last workspace should create a new one.
    # workspace_swipe_forever = false         # if enabled, swiping will not clamp at the neighboring workspaces but continue to the further ones.
}

misc {
    disable_hyprland_logo = true        # disables the hyprland logo background :(
    disable_splash_rendering = false    # disables the hyprland splash rendering. (requires a monitor reload to take effect)
    no_vfr = true                       # disables VFR (variable frame rate) - VFR increases battery life at the expense of possible issues on a few monitors (VFR is off by default).
    mouse_move_enables_dpms = true      # If DPMS is set to off, wake up the monitors if the mouse moves.
    always_follow_on_dnd = true         # Will make mouse focus follow the mouse when drag and dropping. Recommended to leave it enabled, especially for people using focus follows mouse at 0.
    layers_hog_keyboard_focus = true    # If true, will make keyboard-interactive layers keep their focus on mouse move (e.g. wofi, bemenu)
    animate_manual_resizes = true       # If true, will animate manual window resizes/moves
    disable_autoreload = false          # If true, the config will not reload automatically on save, and instead needs to be reloaded with hyprctl reload. Might save on battery.
    enable_swallow = false              # Enable window swallowing
    swallow_regex =                     # The class regex to be used for windows that should be swallowed (usually, a terminal)
    # no_direct_scanout = false           # Disables direct scanout. Direct scanout attempts to reduce lag when there is only one fullscreen application on a screen (e.g. game)
}

binds {
    pass_mouse_when_bound = true      # if disabled, will not pass the mouse events to apps / dragging windows around if a keybind has been triggered. (Enabled by default)
    scroll_event_delay = 100          # in ms, how many ms to wait after a scroll event to allow to pass another one for the binds.
    workspace_back_and_forth = false  # If enabled, an attempt to switch to the currently focused workspace will instead switch to the previous workspace. Akin to i3’s auto_back_and_forth.
    allow_workspace_cycles = true     # If enabled, workspaces don’t forget their previous workspace, so cycles can be created by switching to the first workspace in a sequence, then endlessly going to the previous workspace.
}

dwindle {
    pseudotile = 1                            # Enable pseudotiling on dwindle
    col.group_border = 0x00ff1f59             # Inactive (out of focus) group border color
    col.group_border_active = 0xffff1f59      # Active group border color
    force_split = 0                           # 0 -> split follows mouse, 1 -> always split to the left (new = left or top) 2 -> always split to the right (new = right or bottom)
    preserve_split = 1                        # If enabled, the split (side/top) will not change regardless of what happens to the container.
    special_scale_factor = 0.7                # 0 - 1 -> specifies the scale factor of windows on the special workspace
    split_width_multiplier = 1                # specifies the auto-split width multiplier
    no_gaps_when_only = true                  # whether to apply gaps when there is only one window on a workspace.
    use_active_for_splits = true              # whether to prefer the active window or the mouse position for splits
}

debug {
    overlay = false         # print the debug performance overlay. Disable VFR for accurate results.
    damage_blink = false    # (epilepsy warning!) flash areas updated with damage tracking
    disable_logs = false    # self-explanatory
    disable_time = true     # disables time logging
}

master {
    special_scale_factor = 0.9  # (0.0 - 1.0) the scale of the special workspace windows
    new_is_master = false       # whether a newly open window should replace the master or join the slaves.
    new_on_top = false          # whether a newly open window should be on the top of the stack
    no_gaps_when_only = true    # whether to apply gaps when there is only one window on a workspace.
    orientation = "left"        # default placement of the master area, can be left, right, top or bottom
    inherit_fullscreen = true   # inherit fullscreen status when cycling/swapping to another window (e.g. monocle layout)
}

source = ~/.config/hypr/keybinds.conf
source = ~/.config/hypr/windowrule.conf

# ╭──────────────────────────────────────────────────────────────────────────────╮
# │                                    BLURLS                                    │
# ╰──────────────────────────────────────────────────────────────────────────────╯
# ╭──────────────────────────────────────────────────────────────────────────────╮
# │             Blur layers: (You can get it from `hyprctl layers`)              │
# ╰──────────────────────────────────────────────────────────────────────────────╯
# blurls = waybar
blurls = notifications
blurls = lockscreen
# blurls = gtk-layer-shell

exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec = zsh -i ~/.config/hypr/autostart
