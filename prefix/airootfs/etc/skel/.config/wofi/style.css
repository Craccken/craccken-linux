* {
    outline: none;
}

#window {
    background-color: transparent;
    font-family: "Iosevka Nerd Font";
}

#outer-box {
    background-image: url("/opt/craccken/assets/wofi/background-window.svg");
    background-origin: border-box;
    background-size: contain;
    background-clip: padding-box;
    background-repeat: no-repeat;
    background-position: initial;
}

#input {
    color: transparent;
    border: none;
    box-shadow: unset;
    border-radius: unset;
    background-color: transparent;
    transition-delay: 0ms;
    transition-duration: 0.05s;
    transition-timing-function: ease;
    transition-property: all;
}

#input:focus {
    font-size: 1rem;
    font-family: "Aller Light";
    
    padding-left: 10px;
    padding-right: 1px;
    margin-top: 2rem;
    margin-right: 10rem;
    margin-left: 1rem;
    color: rgba(245, 245, 245, 1);
    caret-color: #ffdf00;
    border-style: solid;
    border-left-width: 2px;
    border-bottom-width: 1px;
    border-left-color: #ffdf00;
    border-bottom-color: rgba(60, 60, 60, 0.2);
}

#input image {
    color: transparent;
}

#input:focus image {
    margin: -1000000px;
}

#scroll {
    margin-left: 1rem;
    margin-bottom: 1.2rem;
    margin-top: 0.2rem;
    margin-right: 15rem;
    border: none;
    background-color: transparent;
}

#inner-box {
    background-color: transparent;
}

#entry {
    color: rgba(60, 60, 60, 0.5);
    background-color: transparent;
    padding-top: 2px;
    padding-bottom: 2px;
    padding-left: 0.5rem;
    font-size: 0.9rem;
    border-left-width: 2px;
    border-left-color: rgba(60, 60, 60, 0.1);
    border-left-style: solid;
}

#entry:selected {
    color: #ffdf00;
    border-left-color: #ffdf00;
    border-left-style: solid;
}

expander list {
    background-color: transparent;
}

#text:selected {
    color: #ffdf00;
    animation-name: glitch; /* The animation-name CSS property specifies the names of one or more @keyframes at-rules that describe the animation to apply to an element. */
    animation-duration: 2s; /* The animation-duration CSS property sets the length of time that an animation takes to complete one cycle. */
    animation-direction: alternate-reverse; /* The animation-direction CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward. */
    animation-iteration-count: infinite; /* Defines the number of times an animation cycle is played. */
    animation-timing-function: linear; /* Describes how the animation will progress over one cycle of its duration. */
}

#img {
    margin-right: 0.5rem;
}

@keyframes glitch {
    48% {
        color: #ffdf00;
        margin: inherit;
    }
    49% {
        color: #00ff87;
        margin-left: 10px;
    }
    50% {
        color: #ff0057;
        margin-left: 20px;
    }
    51% {
        color: #00ff87;
        margin-right: 2px;
    }
    52% {
        color: #ffdf00;
        margin: inherit;
    }
}
